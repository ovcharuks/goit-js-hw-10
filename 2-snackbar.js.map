{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst input = document.querySelector('input[type=\"number\"]');\nconst button = document.querySelector('button[type=submit]');\nconst radioResolve = document.querySelector('input[value=fulfilled]');\nconst radioReject = document.querySelector('input[value=rejected]');\n\nform.addEventListener(\"submit\", (event)=> {\n  event.preventDefault();\n  submit(Number(input.value));\n})\n\nfunction submit(delay) {\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (radioResolve.checked) {\n        resolve(delay);\n      }\n      // if (radioReject.checked) \n      else{\n        reject(delay);\n      }\n    }, delay);\n    console.log(typeof(delay));\n  })\n    .then(delay =>\n      iziToast.success({\n        message: `✅ Fulfilled promise in ${delay}ms\n        `,\n        position: 'topCenter',\n      })\n    )\n    .catch(delay =>\n      iziToast.error({\n        message: `❌ Rejected promise in ${delay}ms`\n        ,\n        position: 'topCenter',\n      })\n    );\n    input.value = \"\";\n}\n\n// button.addEventListener('click', event => {\n//   submit(Number(input.value));\n//   });\n\n// console.log(\"step 1\");\n\n// setTimeout(()=> {\n//     console.log(\"step 2\");\n// }, 4000);\n\n// new Promise ((resolve)=> {\n// resolve(\"step 3\")\n// })\n// .then((data)=> {\n// console.log(data);\n// });\n\n// setTimeout(()=> {console.log(\"step 4\");}, 2000)\n\n// const promise = new Promise ((resolve, reject) => {\n// resolve(10)\n// });\n\n// promise\n// .then((value) => {\n//    return new Promise((resolve) => {\n//         resolve(value *2)\n//     })\n// })\n// .then (value => console.log(value))\n\n// const promise = new Promise ((resolve, reject) => {\n\n//     setTimeout(() => {\n\n//     resolve(5)\n\n//     }, 2000)\n// });\n\n// promise\n// .then((resolve) => {\n//     console.log(resolve);\n//     return resolve * 2;\n// })\n// .then ((resolve) => {\n//     console.log(resolve);\n// return resolve * 2;\n// })\n// .then ((resolve) => {\n//     console.log(resolve);\n//     return resolve * 2;\n// })\n// .catch((error)=> {\n//     console.log(error);\n// })\n// .finally(()=>{\n//     console.log(\"finally\");\n// })\n\n// const promise = new Promise ((resolve, reject) => {\n//     const random = Math.random();\n//     setTimeout(() => {\n// if (random > 0.5){\n//     resolve(\"ok\")\n// } else{reject(\"oops\")}\n//     }, 2000)\n// })\n\n// promise\n// .then((result) => {\n//     console.log(\"then\", result);\n// })\n// .catch((error)=> {\n//     console.log(\"catch\", error);\n// })\n// .finally(()=> {\n//     console.log(\"finally\");\n// })\n"],"names":["form","input","radioResolve","event","submit","delay","resolve","reject","iziToast"],"mappings":"wIAGA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQ,SAAS,cAAc,sBAAsB,EAC5C,SAAS,cAAc,qBAAqB,EAC3D,MAAMC,EAAe,SAAS,cAAc,wBAAwB,EAChD,SAAS,cAAc,uBAAuB,EAElEF,EAAK,iBAAiB,SAAWG,GAAS,CACxCA,EAAM,eAAc,EACpBC,EAAO,OAAOH,EAAM,KAAK,CAAC,CAC5B,CAAC,EAED,SAASG,EAAOC,EAAO,CACrB,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/B,WAAW,IAAM,CACXL,EAAa,QACfI,EAAQD,CAAK,EAIbE,EAAOF,CAAK,CAEf,EAAEA,CAAK,EACR,QAAQ,IAAI,OAAOA,CAAM,CAC7B,CAAG,EACE,KAAKA,GACJG,EAAS,QAAQ,CACf,QAAS,0BAA0BH,CAAK;AAAA,UAExC,SAAU,WAClB,CAAO,CACF,EACA,MAAMA,GACLG,EAAS,MAAM,CACb,QAAS,yBAAyBH,CAAK,KAEvC,SAAU,WAClB,CAAO,CACP,EACIJ,EAAM,MAAQ,EAClB"}